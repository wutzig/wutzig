{"version":3,"sources":["components/Menu.js","components/ScrollBar.js","components/Job.js","components/JobList.js","components/PlusButton.js","components/Plan.js","components/ToDoList.js","components/SnakeTracer.js","components/LogIn.js","components/InfoBar.js","hooks/useDraggable.js","components/DragDropMenu.js","components/DataViewer.js","hooks/useStateStorage.js","components/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["Menu","props","className","map","el","key","onClick","clickHandler","activeMenu","ScrollBar","buttonClick","e","target","classList","contains","window","scrollTo","top","behavior","currentPage","id","numPages","style","margin","bottom","Job","open","url","company_logo","src","alt","title","company","location","created_at","JobList","jobs","length","setCurrentPage","Math","ceil","slice","job","PlusButton","waitingPlus","createHandler","planId","Plan","done","color","active","onFocus","focusHandler","onBlur","blurHandler","onChange","changeHandler","value","name","doneHandler","plans","plan","parentPlanId","_id","ToDoList","React","useState","focussedPlanIndex","setfocussedPlanIndex","setWaitingPlus","focussedPlan","updatedPlan","index","findIndex","setPlans","fetch","method","headers","body","JSON","stringify","withCredentials","credentials","then","response","a","json","data","concat","catch","err","console","log","findHandler","error","stopPropagation","currentTarget","currentPlan","SnakeTracer","canvas","createRef","WIDTH","screen","width","FACTOR","height","useEffect","crossProduct","b","addVec","subVec","multVec","vec","scalar","quatRot","point","axis","angle","origin","r","sin","P","Q","cos","touchX","touchY","changePerspective","rightDown","mouseX","mouseY","grow","cameraAngleX","cameraAngleY","cameraOldAngleX","cameraOldAngleY","vaos","vbos","cameraInitPos","cameraInitDirection","sqrt","cameraInitRight","cameraInitUp","canvasRect","current","getBoundingClientRect","gl","getContext","createCylinder","orientation","direction","first","renderer","cylinders","push","spheres","cylinder_axes","cylinder_colors","sphere_colors","cylinder_radius","sphere_radius2","cylinder_length","sphere_inv_radius","alert","oncontextmenu","preventDefault","onmousemove","clientX","PI","clientY","onmouseout","onmousedown","button","onmouseup","webkitRequestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","ontouchstart","touches","ontouchmove","ontouchend","dir","deltaX","changedTouches","deltaY","ratio","abs","move","document","onkeydown","keyCode","cameraDirection","cameraRight","this","SPEED","MAX_SPHERES","MAX_CYLINDERS","cameraUp","cameraPos","squares","square_length","square_dir","square_norm","square_colors","lightLocation","cos_phi","sin_phi","j","phi","program","model","deltaTime","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","shift","start","uniform3fv","uniformLocations","cameraDirLoc","cameraUpLoc","cameraRightLoc","cameraPosLoc","lightLoc","uniform1f","timeLoc","uniform1i","numSpheresLoc","numCylindersLoc","sphereCenLoc","sphereColLoc","sphereRadius2Loc","sphereInvRadiusLoc","cylinderCenLoc","cylinderAxisLoc","cylinderColLoc","cylinderRadiusLoc","cylinderLengthLoc","squareLoc","squareNormLoc","squareUDirLoc","squareVDirLoc","squareColLoc","squareLenLoc","cosLoc","sinLoc","prepare","drawElements","TRIANGLES","vertexCount","UNSIGNED_SHORT","unbind","stop","Model","vaoID","bindVertexArray","enableVertexAttribArray","disableVertexAttribArray","ShaderProgram","shaders","numSquares","loadShader","source","type","shaderID","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","errors","getShaderInfoLog","deleteShader","vertexShaderID","vsSource","VERTEX_SHADER","fragmentShaderID","fsSource","FRAGMENT_SHADER","programID","createProgram","attachShader","bindAttribLocation","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","sphereLocations","sphereColorLocations","sphereRadius2Locations","sphereInvRadiusLocations","cylinderLocations","cylinderAxisLocations","cylinderColorLocations","cylinderRadiusLocations","cylinderLengthLocations","squareLocations","squareColors","squareNormLocations","squareUDirLocations","squareVDirLocations","squareLenLocations","cosLocations","sinLocations","locStr","getUniformLocation","useProgram","detachShader","deleteProgram","Loader","createVertexArray","vboID","createBuffer","bindBuffer","ELEMENT_ARRAY_BUFFER","bufferData","Uint16Array","indices","STATIC_DRAW","ARRAY_BUFFER","Float32Array","positions","vertexAttribPointer","FLOAT","devicePixelRatio","min","shaderProgram","cubeModel","loadToVAO","requestAnimationFrame","render","now","drawScene","main","ref","marginTop","LogIn","username","changeName","password","changePassword","repeat","changeRepeat","buttonDisable","changeDisable","message","changeMessage","handleNameChange","route","res","status","jsonRes","setUser","setActive","disabled","InfoBar","user","useDraggable","divRef","dimension","setVisualData","numRows","setNumRows","tiles","getElementsByClassName","dashboard","getElementById","dragDropMenu","Array","prototype","find","call","childNodes","dragBar","resizeCorner","createElement","appendChild","dashLeft","left","scrollX","dashTop","scrollY","cols","rows","currentCol","currentRow","clickFromTopLeft","isDrag","isResize","hasMoved","onResize","dragDown","forEach","tile","getAttribute","opacity","transition","pageY","pageX","resizeDown","minRow","maxRow","minCol","maxCol","max","floor","up","rowWidth","newTop","newLeft","prevState","view","newWidth","newHeight","addEventListener","removeEventListener","DragDropMenu","menuRef","useRef","dragBarRef","menuIconRef","disableInput","setDisableInput","showMenu","dropDown","menuIcon","topBar","midBar","lowBar","menuDown","remove","visibility","add","delete","clickEvent","createEvent","initEvent","dispatchEvent","graphName","nodeName","display","select","rename","onMouseDown","DataViewer","visualData","svg","x","y","path","text","xTicks","xRange","yRange","xScale","yScale","deleteMe","useCallback","filter","renameMe","newName","xVals","pair","yVals","i","round","val","pow","d3","domain","range","attr","append","xVal","selectAll","enter","dataPoint","d","on","line","curve","xAxis","yAxis","tickValues","tickFormat","ticks","fontSize","border","position","useStateStorage","empty","parse","sessionStorage","getItem","setValue","setItem","Dashboard","setTiles","oldNumRows","prevTiles","temp","k","num","row","col","gridTemplateRows","newRow","graph","handleLoadClick","startDate","split","join","endDate","graphs","dataSet","App","setJobs","setView","fetchData","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8e194dc7.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Menu.css';\r\n\r\nexport default function Menu(props){\r\n    return (\r\n    <div className=\"menu\">\r\n        {[1,2,3,4].map(el=><div key={el} onClick = {() => props.clickHandler(el)} className={props.activeMenu===el?\"menuItem active\":\"menuItem\"}><div className=\"menuText\">item {el}</div></div>)}\r\n    </div>\r\n    )\r\n}","import React from 'react'\r\nimport './ScrollBar.css';\r\n\r\nexport default function ScrollBar(props){\r\n    const buttonClick = function(e){\r\n        if(e.target.classList.contains('bottom')) window.scrollTo({top: 0, behavior: 'smooth'});\r\n        if(props.currentPage > 1 && e.target.id === 'prev') props.clickHandler(props.currentPage-1);                  \r\n        if(props.currentPage < props.numPages && e.target.id === 'next') props.clickHandler(props.currentPage+1);\r\n    }\r\n    return(\r\n        <div style={{'marginTop': '10px'}}><button style={{margin: 0}} onClick={buttonClick} className={props.bottom?'bottom':''} id=\"prev\">&#x276E;</button> \r\n        <div className=\"pageText\">{props.currentPage} of {props.numPages}</div>\r\n        <button style={{margin: 0}} onClick={buttonClick} className={props.bottom?'bottom':''} id=\"next\">&#x276F;</button></div>\r\n    )\r\n}","import React from 'react'\r\nimport './Job.css'\r\nexport default function Job(props){\r\n    return (\r\n        <div onClick={e => window.open(props.url, '_blank')} className='Job'>\r\n            <div className='Logo'>{props.company_logo && <img src={props.company_logo} alt=\"no img\"/>}</div>\r\n            <div className='Title'>{props.title}</div>\r\n            <div className='Company'>{props.company}</div>\r\n            <div className='Location'>{props.location}</div>\r\n            <div className='Created'>{props.created_at}</div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './JobList.css'\r\nimport ScrollBar from './ScrollBar.js'\r\nimport Job from './Job.js'\r\n\r\nexport default function JobList(props){\r\n    const jobsPerPage = 10;\r\n    return (\r\n        <div className=\"JobList\">\r\n            <h4>found {props.jobs.length} jobs</h4>\r\n            <ScrollBar clickHandler={props.setCurrentPage} numPages={Math.ceil(props.jobs.length/jobsPerPage)} currentPage={props.currentPage}/>\r\n            {props.jobs.slice(jobsPerPage * (props.currentPage-1), jobsPerPage * props.currentPage).map(job => <Job \r\n                key         = {job.id} \r\n                title       = {job.title} \r\n                company     = {job.company} \r\n                company_logo= {job.company_logo}\r\n                location    = {job.location}\r\n                created_at  = {job.created_at}\r\n                url         = {job.url}\r\n                />)}\r\n            <ScrollBar bottom={true} clickHandler={props.setCurrentPage} numPages={Math.ceil(props.jobs.length/jobsPerPage)} currentPage={props.currentPage}/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './Plan.css'\r\nimport './PlusButton.css'\r\n\r\nexport default function PlusButton(props){\r\n    return props.waitingPlus ?\r\n    <div className=\"lds-dual-ring\"></div> :\r\n    <button\r\n        onClick     = {(e) => props.createHandler(e, props.planId)} \r\n        className   = 'Plus'>\r\n    &#10010;</button>\r\n}","import React from 'react';\r\nimport './Plan.css'\r\nimport PlusButton from './PlusButton'\r\n\r\nexport default function Plan(props){\r\n    let done, color, active;\r\n    if(props.done){\r\n        done = <span>&#10004;</span>\r\n        color = 'green'\r\n        active = 'Done Active'\r\n    } else {\r\n        done = <span>&#10008;</span>\r\n        color = 'red'\r\n        active = 'Done'\r\n    }\r\n    return(\r\n        <div className='Plan'>\r\n            <div className = 'Headline'>\r\n                <PlusButton \r\n                    planId          = {props.planId} \r\n                    createHandler   = {props.createHandler} \r\n                    waitingPlus     = {props.waitingPlus}/>\r\n                <input \r\n                    onFocus     = {(e) => props.focusHandler(e, props.planId)}\r\n                    onBlur      = {props.blurHandler}\r\n                    onChange    = {props.changeHandler} \r\n                    className   = 'Name' \r\n                    value       = {props.name}/>\r\n                <button\r\n                    onClick     = {(e) => props.doneHandler(e, props.planId)} \r\n                    className   = {active} \r\n                    style       = {{color: `${color}`}}>\r\n                {done}</button>\r\n            </div>\r\n            <div className='ToDoList'>\r\n            {props.plans.map(plan => {\r\n                return plan.parentPlanId === props.planId && <Plan \r\n                    key             = {plan._id} \r\n                    planId          = {plan._id} \r\n                    focusHandler    = {props.focusHandler}\r\n                    blurHandler     = {props.blurHandler}\r\n                    changeHandler   = {props.changeHandler}\r\n                    doneHandler     = {props.doneHandler} \r\n                    createHandler   = {props.createHandler}\r\n                    name            = {plan.name} \r\n                    done            = {plan.done}\r\n                    waitingPlus     = {plan.waitingPlus}\r\n                    plans           = {props.plans}/>\r\n            })}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport Plan from './Plan'\r\nimport PlusButton from './PlusButton'\r\nimport './Plan.css'\r\n\r\nexport default function ToDoList(props){\r\n    const url = 'http://localhost:4000'\r\n    const [focussedPlanIndex, setfocussedPlanIndex] = React.useState()\r\n    const [waitingPlus, setWaitingPlus] = React.useState(false)\r\n    //React.useEffect(() => console.log(focussedPlanIndex), [focussedPlanIndex])\r\n    const createHandler = function(e, id){\r\n        let focussedPlan, updatedPlan, index;\r\n        if(id){\r\n            index = props.plans.findIndex(plan => id === plan._id)\r\n            focussedPlan = props.plans[index]\r\n            updatedPlan = {...focussedPlan, waitingPlus: true}\r\n            props.setPlans([...props.plans.slice(0, index), updatedPlan, ...props.plans.slice(index + 1)])\r\n        } else{\r\n            setWaitingPlus(true)\r\n        }\r\n        fetch('/api/todo/create', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({parentPlanId: id}),\r\n            withCredentials: true, \r\n            credentials: 'include'\r\n        }).then(async function(response) {\r\n            const data = await response.json()\r\n            if(id){\r\n                updatedPlan = {...focussedPlan, waitingPlus: false}\r\n                props.setPlans([data].concat([...props.plans.slice(0, index), updatedPlan, ...props.plans.slice(index + 1)]))\r\n            } else {\r\n                setWaitingPlus(false)\r\n                props.setPlans([data].concat(props.plans))\r\n            }\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n        //e.stopPropagation()\r\n    }\r\n    const findHandler = function(){\r\n        fetch('/api/todo/find', { withCredentials: true, credentials: 'include' })\r\n        .then(async function(response) {\r\n            const data = await response.json()\r\n            props.setPlans(data)\r\n        }).catch(err => console.error(err))\r\n    }\r\n    const deleteHandler = function(){\r\n        fetch('/api/todo/delete', {withCredentials: true, credentials: 'include'})\r\n        .then(() => findHandler())\r\n        .catch(err => console.error(err))\r\n    }\r\n    const doneHandler = function(e, id){\r\n        const index = props.plans.findIndex(plan => id === plan._id)\r\n        const focussedPlan = props.plans[index]\r\n        fetch('/api/todo/done/' + id).catch(err => console.error(err))\r\n        \r\n        const updatedPlan = {...focussedPlan, done: !focussedPlan.done}\r\n        props.setPlans([...props.plans.slice(0, index), updatedPlan, ...props.plans.slice(index + 1)])\r\n        e.stopPropagation()\r\n    }\r\n    const changeHandler = function(e){\r\n        const focussedPlan = props.plans[focussedPlanIndex]\r\n        const updatedPlan = {...focussedPlan, name: e.currentTarget.value}\r\n        props.setPlans([...props.plans.slice(0, focussedPlanIndex), updatedPlan, ...props.plans.slice(focussedPlanIndex + 1)])\r\n    }\r\n    const focusHandler = function(e, id){\r\n        const index = props.plans.findIndex(plan => id === plan._id)\r\n        setfocussedPlanIndex(index)\r\n        e.stopPropagation()\r\n    }\r\n    const blurHandler = function(e){\r\n        const name = e.currentTarget.value\r\n        const currentPlan = props.plans[focussedPlanIndex]\r\n        fetch('/api/todo/name/'+ currentPlan._id, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({name: name})\r\n        }).catch(err => console.error(err))\r\n        e.stopPropagation()\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>To Do List</h1>\r\n            <PlusButton \r\n                createHandler   = {createHandler}\r\n                planId          = {null}\r\n                waitingPlus     = {waitingPlus}/>\r\n            <button className=\"Rect\" onClick={deleteHandler}>Delete All</button>\r\n            <button className=\"Rect\" onClick={findHandler}>Find All</button>\r\n            <div id='TopList' className='ToDoList'>\r\n            {props.plans.map(plan => {\r\n                return !plan.parentPlanId && <Plan \r\n                    key             = {plan._id}\r\n                    planId          = {plan._id} \r\n                    focusHandler    = {focusHandler}\r\n                    blurHandler     = {blurHandler}\r\n                    changeHandler   = {changeHandler}\r\n                    doneHandler     = {doneHandler}\r\n                    createHandler   = {createHandler}\r\n                    name            = {plan.name} \r\n                    done            = {plan.done}\r\n                    waitingPlus     = {plan.waitingPlus}\r\n                    plans           = {props.plans}/>\r\n            })}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function SnakeTracer(props){  \r\n    const canvas = React.createRef(null);\r\n    const WIDTH = window.screen.width;\r\n    const FACTOR = window.screen.height > WIDTH ? 1.0 : 0.75;\r\n    \r\n    React.useEffect(() => {\r\n        function crossProduct(a, b) {\r\n            return [a[1]*b[2] - a[2]*b[1],\r\n                    a[2]*b[0] - a[0]*b[2],\r\n                    a[0]*b[1] - a[1]*b[0]];\r\n        }\r\n        function dotProduct(a, b) {\r\n            return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\r\n        }\r\n        function addVec(a, b){\r\n            return [a[0] + b[0], a[1] + b[1], a[2] + b[2]];\r\n        }\r\n        function subVec(a, b){\r\n            return [a[0] - b[0], a[1] - b[1], a[2] - b[2]];\r\n        }\r\n        function multVec(vec, scalar){\r\n            return [scalar * vec[0], scalar * vec[1], scalar * vec[2]];\r\n        }\r\n        function quatRot(point, axis, angle, origin = [0.0, 0.0, 0.0]){\r\n            const r = multVec(axis, Math.sin(angle / 2.0));\r\n            const P = subVec(point, origin);\r\n            const Q = addVec(point, crossProduct( multVec(r, 2.0), addVec(crossProduct(r, P), multVec(P, Math.cos(angle/2.0)))));\r\n            return Q;\r\n        }\r\n        \r\n        let canvasFull = false;\r\n        let changePerspective = false;\r\n        let rightDown = false;\r\n        let mouseX = 0;\r\n        let mouseY = 0;\r\n        let touchX, touchY;\r\n        let grow = true;\r\n        let cameraAngleX = 0;\r\n        let cameraAngleY = 0;\r\n        let cameraOldAngleX = 0;\r\n        let cameraOldAngleY = 0;\r\n        let vaos = [];\r\n        let vbos = [];\r\n        let cameraInitPos = [2550.0, 2700.0, 3750.0];\r\n        let cameraInitDirection = [-0.48, -0.51, -Math.sqrt(1.0 - 0.48 * 0.48 - 0.51 * 0.51)];\r\n        let cameraInitRight = crossProduct(cameraInitDirection, [0.0, 1.0, 0.0]);\r\n        cameraInitRight = multVec(cameraInitRight, 1.0 / Math.sqrt(dotProduct(cameraInitRight, cameraInitRight)));\r\n        let cameraInitUp = crossProduct(cameraInitRight, cameraInitDirection);\r\n        \r\n        var alpha = 0.0;\r\n        let canvasRect = canvas.current.getBoundingClientRect();\r\n        const gl = canvas.current.getContext(\"webgl2\");\r\n        if (!gl) {\r\n            alert(\"Unable to initialize WebGL2. Your browser or machine may not support it.\");\r\n        }\r\n        canvas.current.oncontextmenu = function(e){e.preventDefault();};\r\n        canvas.current.onmousemove = function(e){\r\n            if(rightDown === true){\r\n                cameraAngleX += ((mouseX - e.clientX)/canvasRect.width) * Math.PI;\r\n                mouseX = e.clientX;\r\n                cameraAngleY += ((mouseY - e.clientY)/canvasRect.height) * Math.PI;\r\n                mouseY = e.clientY;\r\n            }\r\n        }\r\n        canvas.current.onmouseout = function(e){\r\n            //document.getElementById(\"demo\").innerHTML = \"\";\r\n            //document.getElementById(\"angle\").innerHTML = \"\";\r\n        };\r\n        canvas.current.onmousedown = function (e){\r\n            if(e.button === 0){\r\n                //leftDown = true;\r\n                return\r\n            }\r\n            else if(e.button === 2){\r\n                rightDown = true;\r\n                changePerspective = true;\r\n                mouseX = e.clientX;\r\n                mouseY = e.clientY;\r\n            }\r\n        };\r\n        canvas.current.onmouseup = function (e){\r\n            if(e.button === 0){\r\n                fullscreen();\r\n            }\r\n            else if(e.button === 2){\r\n                rightDown = false;\r\n                changePerspective = false;\r\n            }\r\n        };\r\n        canvas.current.ontouchstart = function(e){\r\n            touchX = e.touches[0].clientX;\r\n            touchY = e.touches[0].clientY;\r\n        }\r\n        canvas.current.ontouchmove = function(e){\r\n            e.preventDefault()\r\n            e.stopPropagation()\r\n        }\r\n        canvas.current.ontouchend = function(e){\r\n            e.preventDefault()\r\n            e.stopPropagation()\r\n            const deltaX = e.changedTouches[0].clientX - touchX;\r\n            const deltaY = e.changedTouches[0].clientY - touchY;\r\n            const ratio = Math.abs(deltaY/deltaX);\r\n            let axis, dir\r\n            let move = false;\r\n    \r\n            if(ratio > 5.0){\r\n                axis = 1;\r\n                dir = deltaY>0?-1:1;\r\n                move = true;\r\n            } else if(ratio < 0.2){\r\n                axis = 0;\r\n                dir = deltaX>0?1:-1;\r\n                move = true;\r\n            } else if(deltaX * deltaY > 0){\r\n                axis = 2;\r\n                dir = deltaX > 0?-1:1\r\n                move = true;\r\n            }\r\n            if(move) createCylinder(axis, dir, renderer.cylinders.length === 0)\r\n        }\r\n        function createCylinder(orientation, direction, first = false){\r\n            if(first){\r\n                renderer.cylinders.push(renderer.spheres[0]);\r\n                renderer.cylinder_axes.push([0.0, 0.0, 0.0]);\r\n                renderer.cylinder_axes[0][orientation] = direction;\r\n                renderer.cylinder_colors.push(renderer.sphere_colors[0]);\r\n                renderer.cylinder_radius.push(Math.sqrt(renderer.sphere_radius2[0]));\r\n                renderer.cylinder_length.push(0.0);\r\n                renderer.spheres.push(renderer.spheres[0]);\r\n                renderer.sphere_colors.push(renderer.sphere_colors[0]);\r\n                renderer.sphere_radius2.push(renderer.sphere_radius2[0]);\r\n                renderer.sphere_inv_radius.push(renderer.sphere_inv_radius[0]);\r\n            }\r\n            else{\r\n                if(renderer.cylinder_axes[renderer.cylinders.length - 1][orientation] === 0.0){\r\n                    renderer.cylinders.push(renderer.spheres[renderer.spheres.length - 1]);\r\n                    renderer.cylinder_axes.push([0.0, 0.0, 0.0]);\r\n                    renderer.cylinder_axes[renderer.cylinder_axes.length - 1][orientation] = direction;\r\n                    renderer.cylinder_colors.push(renderer.sphere_colors[0]);\r\n                    renderer.cylinder_radius.push(renderer.cylinder_radius[0]);\r\n                    renderer.cylinder_length.push(0.0);\r\n                    renderer.spheres.push(renderer.spheres[renderer.spheres.length - 1]);\r\n                    renderer.sphere_colors.push(renderer.sphere_colors[0]);\r\n                    renderer.sphere_radius2.push(renderer.sphere_radius2[0]);\r\n                    renderer.sphere_inv_radius.push(renderer.sphere_inv_radius[0]);\r\n                }\r\n            }\r\n        };\r\n        \r\n        document.onkeydown = function(e){\r\n            switch(e.keyCode){\r\n                case 87://W\r\n                    cameraInitPos = addVec(cameraInitPos, multVec(renderer.cameraDirection, 10.0));\r\n                    //e.preventDefault();\r\n                    break;\r\n                case 83://S\r\n                    cameraInitPos = subVec(cameraInitPos, multVec(renderer.cameraDirection, 10.0));\r\n                    //e.preventDefault();\r\n                    break;\r\n                case 65://A\r\n                    cameraInitPos = subVec(cameraInitPos, multVec(renderer.cameraRight, 10.0));\r\n                    //e.preventDefault();\r\n                    break;\r\n                case 68://D\r\n                    cameraInitPos = addVec(cameraInitPos, multVec(renderer.cameraRight, 10.0));\r\n                    //e.preventDefault();\r\n                    break;\r\n                case 71://g key\r\n                    grow = !grow;\r\n                    //e.preventDefault();\r\n                    break;\r\n                case 37://left key = left\r\n                    if(renderer.cylinders.length > 0){\r\n                        createCylinder(0, -1.0);\r\n                    }\r\n                    else{\r\n                        createCylinder(0, -1.0, true);\r\n                    }\r\n                    e.preventDefault();\r\n                    break;\r\n                case 38://up key = back\r\n                if(renderer.cylinders.length > 0){\r\n                        createCylinder(2, -1.0);\r\n                    }\r\n                    else{\r\n                        createCylinder(2, -1.0, true);\r\n                    }\r\n                    e.preventDefault();\r\n                    break;\r\n                case 39://right key = right\r\n                    if(renderer.cylinders.length > 0){\r\n                            createCylinder(0, 1.0);\r\n                        }\r\n                    else{\r\n                        createCylinder(0, 1.0, true);\r\n                    }\r\n                    e.preventDefault();\r\n                    break;\r\n                case 40://down key = forth\r\n                    if(renderer.cylinders.length > 0){\r\n                            createCylinder(2, 1.0);\r\n                        }\r\n                    else{\r\n                        createCylinder(2, 1.0, true);\r\n                    }\r\n                    e.preventDefault();\r\n                    break;\r\n                case 17:\r\n                    if(renderer.cylinders.length > 0){\r\n                            createCylinder(1, -1.0);\r\n                        }\r\n                    else{\r\n                        createCylinder(1, -1.0, true);\r\n                    }\r\n                    e.preventDefault();\r\n                    break;\r\n                case 16:\r\n                    if(renderer.cylinders.length > 0){\r\n                            createCylinder(1, 1.0);\r\n                        }\r\n                    else{\r\n                        createCylinder(1, 1.0, true);\r\n                    }\r\n                    e.preventDefault();\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        };\r\n        \r\n        function fullscreen(){\r\n            if(canvasFull === false){\r\n                if(canvas.current.webkitRequestFullscreen) {\r\n                    canvas.current.webkitRequestFullScreen();\r\n                }\r\n                else {\r\n                    canvas.current.mozRequestFullScreen();\r\n                }            \r\n            }\r\n            else{\r\n                return;\r\n            }\r\n        }\r\n        class Renderer {\r\n            constructor(){\r\n                this.SPEED = 400.0;\r\n                this.MAX_SPHERES = 30;\r\n                this.MAX_CYLINDERS = 30;\r\n                this.cameraDirection = cameraInitDirection;\r\n                this.cameraUp = cameraInitUp;\r\n                this.cameraRight = cameraInitRight;\r\n                this.cameraPos = cameraInitPos;\r\n        \r\n                this.cylinders = [];\r\n                this.cylinder_axes = [];\r\n                this.cylinder_colors = [];\r\n                this.cylinder_radius = [];\r\n                this.cylinder_length = [];\r\n        \r\n                this.spheres = [];\r\n                this.sphere_radius2 = [];\r\n                this.sphere_inv_radius = [];\r\n                this.sphere_colors = [];\r\n        \r\n                this.squares = [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 0.0]];\r\n                this.square_length = 1800.0;\r\n                this.square_dir= [[0.0, 0.0, 1.0], [1.0, 0.0, 0.0], [1.0, 0.0, 0.0], [0.0, 1.0, 0.0], [0.0, 1.0, 0.0], [0.0, 0.0, 1.0]];\r\n                this.square_norm = [[0.0, 1.0, 0.0], [0.0, 0.0, 1.0], [1.0, 0.0, 0.0]];\r\n                this.square_colors = [[0.4, 0.78, 0.8], [0.8, 0.65, 0.6], [0.8, 0.9, 0.7]];\r\n        \r\n                this.spheres.push([900.0, 900.0, 900.0]);\r\n                this.sphere_radius2.push(6400.0);\r\n                this.sphere_inv_radius.push(1.0 / 80.0);\r\n                this.sphere_colors.push([0.75, 0.75, 0.75]);\r\n        \r\n                this.lightLocation = [1400.0, 2800.0, 1400.0];\r\n                this.cos_phi = [];\r\n                this.sin_phi = [];\r\n                for(let j = 0; j < 12; j++){\r\n                    const phi = Math.PI / 6.0 * j;\r\n                    this.cos_phi.push(Math.cos(phi));\r\n                    this.sin_phi.push(Math.sin(phi));\r\n                }\r\n                for(let j = 0; j < 8; j++){\r\n                    const phi = Math.PI / 4.0 * j;\r\n                    this.cos_phi.push(2.0 / 3.0 * Math.cos(phi));\r\n                    this.sin_phi.push(2.0 / 3.0 * Math.sin(phi));\r\n                }\r\n                for(let j = 0; j < 4; j++){\r\n                    const phi = Math.PI / 2.0 * j;\r\n                    this.cos_phi.push(1.0 / 3.0 * Math.cos(phi));\r\n                    this.sin_phi.push(1.0 / 3.0 * Math.sin(phi));\r\n                }\r\n            }\r\n            drawScene(program, model, deltaTime) {\r\n                gl.clearColor(0.0, 0.0, 0.0, 1.0);  // Clear to black, fully opaque\r\n                gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n        \r\n                if(this.cylinders.length > 0 && this.spheres.length > 0){\r\n                    this.cylinder_length[this.cylinders.length - 1] = this.cylinder_length[this.cylinders.length - 1] + deltaTime * this.SPEED;\r\n                    this.spheres[this.spheres.length - 1] = addVec(this.spheres[this.spheres.length - 1], \r\n                    multVec(this.cylinder_axes[this.cylinders.length - 1], deltaTime * this.SPEED));\r\n                    if(!grow){\r\n                        this.spheres[0] = addVec(this.spheres[0], multVec(this.cylinder_axes[0], deltaTime * this.SPEED));\r\n                        this.cylinders[0] = addVec(this.cylinders[0], multVec(this.cylinder_axes[0], deltaTime * this.SPEED));\r\n                        this.cylinder_length[0] -= deltaTime * this.SPEED;\r\n                        if(this.cylinder_length[0] <= 0.0){\r\n                            this.spheres.shift();\r\n                            this.sphere_colors.shift();\r\n                            this.sphere_inv_radius.shift();\r\n                            this.sphere_radius2.shift();\r\n                            this.cylinders.shift();\r\n                            this.cylinder_axes.shift();\r\n                            this.cylinder_colors.shift();\r\n                            this.cylinder_length.shift();\r\n                            this.cylinder_radius.shift();\r\n                        }\r\n                    }\r\n                }\r\n                this.lightLocation = quatRot(this.lightLocation, [0.0, 1.0, 0.0], deltaTime, [1100.0, 2800.0, 1100.0]);\r\n                program.start();\r\n                this.cameraPos = cameraInitPos;\r\n                gl.uniform3fv(program.uniformLocations.cameraDirLoc, \r\n                    this.cameraDirection);\r\n                gl.uniform3fv(program.uniformLocations.cameraUpLoc, \r\n                    this.cameraUp);\r\n                gl.uniform3fv(program.uniformLocations.cameraRightLoc, \r\n                    this.cameraRight);\r\n                gl.uniform3fv(program.uniformLocations.cameraPosLoc, \r\n                    this.cameraPos);\r\n                gl.uniform3fv(program.uniformLocations.lightLoc, \r\n                    this.lightLocation);\r\n                gl.uniform1f(program.uniformLocations.timeLoc,\r\n                    alpha);\r\n                gl.uniform1i(program.uniformLocations.numSpheresLoc,\r\n                    this.spheres.length);\r\n                gl.uniform1i(program.uniformLocations.numCylindersLoc,\r\n                    this.cylinders.length);\r\n        \r\n                for(let j=0; j < this.spheres.length; j++){\r\n                    gl.uniform3fv(program.uniformLocations.sphereCenLoc[j], this.spheres[j]);\r\n                    gl.uniform3fv(program.uniformLocations.sphereColLoc[j], this.sphere_colors[j]);\r\n                    gl.uniform1f(program.uniformLocations.sphereRadius2Loc[j], this.sphere_radius2[j]);\r\n                    gl.uniform1f(program.uniformLocations.sphereInvRadiusLoc[j], this.sphere_inv_radius[j]);\r\n                }\r\n        \r\n                for(let j=0; j < this.cylinders.length; j++){\r\n                    gl.uniform3fv(program.uniformLocations.cylinderCenLoc[j], this.cylinders[j]);\r\n                    gl.uniform3fv(program.uniformLocations.cylinderAxisLoc[j], this.cylinder_axes[j]);\r\n                    gl.uniform3fv(program.uniformLocations.cylinderColLoc[j], this.cylinder_colors[j]);\r\n                    gl.uniform1f(program.uniformLocations.cylinderRadiusLoc[j], this.cylinder_radius[j]);\r\n                    gl.uniform1f(program.uniformLocations.cylinderLengthLoc[j], this.cylinder_length[j]);\r\n                }\r\n        \r\n                for(let j=0; j < this.squares.length; j++){\r\n                    gl.uniform3fv(program.uniformLocations.squareLoc[j], this.squares[j]);\r\n                    gl.uniform3fv(program.uniformLocations.squareNormLoc[j], this.square_norm[j]);\r\n                    gl.uniform3fv(program.uniformLocations.squareUDirLoc[j], this.square_dir[2*j]);\r\n                    gl.uniform3fv(program.uniformLocations.squareVDirLoc[j], this.square_dir[2*j + 1]);\r\n                    gl.uniform3fv(program.uniformLocations.squareColLoc[j], this.square_colors[j]);\r\n                    gl.uniform1f(program.uniformLocations.squareLenLoc[j], this.square_length);\r\n                }\r\n                \r\n                for(let j = 0; j < 24; j++){\r\n                    gl.uniform1f(program.uniformLocations.cosLoc[j], this.cos_phi[j]);\r\n                    gl.uniform1f(program.uniformLocations.sinLoc[j], this.sin_phi[j]);\r\n                }\r\n                model.prepare();\r\n                gl.drawElements(gl.TRIANGLES, model.vertexCount, gl.UNSIGNED_SHORT, 0);\r\n                model.unbind();\r\n                program.stop();\r\n            }\r\n        }\r\n        const renderer = new Renderer()\r\n        class Model {\r\n            constructor(vaoID, vertexCount){\r\n                this.vaoID = vaoID;\r\n                this.vertexCount = vertexCount;\r\n            }\r\n            prepare() {\r\n                gl.bindVertexArray(this.vaoID);\r\n                gl.enableVertexAttribArray(0);\r\n            }\r\n            unbind() {\r\n                gl.disableVertexAttribArray(0);\r\n                gl.bindVertexArray(null);\r\n            }\r\n        }\r\n        class ShaderProgram {\r\n            constructor(shaders, numSquares){\r\n                function loadShader(source, type){\r\n                    const shaderID = gl.createShader(type);\r\n                    gl.shaderSource(shaderID, source);\r\n                    gl.compileShader(shaderID);\r\n                    var compiled = gl.getShaderParameter(shaderID, gl.COMPILE_STATUS);\r\n                    if(!compiled){\r\n                        var errors = gl.getShaderInfoLog(shaderID);\r\n                        alert('Failed to compile ' + type + ' with these errors:' + errors);\r\n                        gl.deleteShader(shaderID);\r\n                        return null;\r\n                    }\r\n                    return shaderID;\r\n                }\r\n                this.vertexShaderID = loadShader(shaders.vsSource, gl.VERTEX_SHADER);\r\n                this.fragmentShaderID = loadShader(shaders.fsSource, gl.FRAGMENT_SHADER);\r\n                this.programID = gl.createProgram();\r\n                gl.attachShader(this.programID, this.vertexShaderID);\r\n                gl.attachShader(this.programID, this.fragmentShaderID);\r\n                gl.bindAttribLocation(this.programID, 0, 'aVertexPosition');\r\n                gl.linkProgram(this.programID);\r\n                if (!gl.getProgramParameter(this.programID, gl.LINK_STATUS)) {\r\n                    alert('Unable to initialize the shader program: ' + gl.getProgramInfoLog(this.programID));\r\n                return null;\r\n                }\r\n                var sphereLocations = [];\r\n                var sphereColorLocations = [];\r\n                var sphereRadius2Locations = [];\r\n                var sphereInvRadiusLocations = [];\r\n        \r\n                var cylinderLocations = [];\r\n                var cylinderAxisLocations = [];\r\n                var cylinderColorLocations = [];\r\n                var cylinderRadiusLocations = [];\r\n                var cylinderLengthLocations = [];\r\n        \r\n                var squareLocations = [];\r\n                var squareColors = [];\r\n                var squareNormLocations = [];\r\n                var squareUDirLocations = [];\r\n                var squareVDirLocations = [];\r\n                var squareLenLocations = [];\r\n                var cosLocations = [];\r\n                var sinLocations = [];\r\n        \r\n                for(let j = 0; j < 24; j++){\r\n                    let locStr = 'cosPhi[' + j  + ']';\r\n                    cosLocations.push(gl.getUniformLocation(this.programID, locStr));\r\n                    locStr = 'sinPhi[' + j  + ']';\r\n                    sinLocations.push(gl.getUniformLocation(this.programID, locStr));\r\n                }\r\n        \r\n                for(let j=0; j < renderer.MAX_SPHERES; j++){\r\n                    let locStr = 'spheres[' + j +'].center';\r\n                    sphereLocations.push(gl.getUniformLocation(this.programID, locStr));\r\n                    locStr = 'spheres[' + j +'].color';\r\n                    sphereColorLocations.push(gl.getUniformLocation(this.programID, locStr));\r\n                    locStr = 'spheres[' + j +'].radius2';\r\n                    sphereRadius2Locations.push(gl.getUniformLocation(this.programID, locStr));\r\n                    locStr = 'spheres[' + j +'].inv_radius';\r\n                    sphereInvRadiusLocations.push(gl.getUniformLocation(this.programID, locStr));\r\n                }\r\n        \r\n                for(var j=0; j < renderer.MAX_CYLINDERS; j++){\r\n                    var locStr = 'cylinders[' + j +'].pos';\r\n                    cylinderLocations.push(gl.getUniformLocation(this.programID, locStr));\r\n                    locStr = 'cylinders[' + j +'].axis';\r\n                    cylinderAxisLocations.push(gl.getUniformLocation(this.programID, locStr));\r\n                    locStr = 'cylinders[' + j +'].color';\r\n                    cylinderColorLocations.push(gl.getUniformLocation(this.programID, locStr));\r\n                    locStr = 'cylinders[' + j +'].radius';\r\n                    cylinderRadiusLocations.push(gl.getUniformLocation(this.programID, locStr));\r\n                    locStr = 'cylinders[' + j +'].length';\r\n                    cylinderLengthLocations.push(gl.getUniformLocation(this.programID, locStr));\r\n                }\r\n        \r\n                for(let j = 0; j < numSquares; j++){\r\n                    let locStr = 'squares[' + j +'].pos';\r\n                    squareLocations.push(gl.getUniformLocation(this.programID, locStr));\r\n                    locStr = 'squares[' + j +'].color';\r\n                    squareColors.push(gl.getUniformLocation(this.programID, locStr));\r\n                    locStr = 'squares[' + j +'].norm';\r\n                    squareNormLocations.push(gl.getUniformLocation(this.programID, locStr));\r\n                    locStr = 'squares[' + j +'].uDir';\r\n                    squareUDirLocations.push(gl.getUniformLocation(this.programID, locStr));\r\n                    locStr = 'squares[' + j +'].vDir';\r\n                    squareVDirLocations.push(gl.getUniformLocation(this.programID, locStr));\r\n                    locStr = 'squares[' + j +'].length';\r\n                    squareLenLocations.push(gl.getUniformLocation(this.programID, locStr));\r\n                }\r\n                \r\n                this.uniformLocations = {\r\n                    cameraDirLoc: gl.getUniformLocation(this.programID, 'camera_dir'),\r\n                    cameraUpLoc: gl.getUniformLocation(this.programID, 'camera_up'),\r\n                    cameraRightLoc: gl.getUniformLocation(this.programID, 'camera_right'),\r\n                    cameraPosLoc: gl.getUniformLocation(this.programID, 'camera_pos'),\r\n                    lightLoc: gl.getUniformLocation(this.programID, 'light'),\r\n                    timeLoc: gl.getUniformLocation(this.programID, 'time'),\r\n                    numCylindersLoc: gl.getUniformLocation(this.programID, 'numCylinders'),\r\n                    numSpheresLoc: gl.getUniformLocation(this.programID, 'numSpheres'),\r\n                    cosLoc: cosLocations,\r\n                    sinLoc: sinLocations,\r\n                    squareLenLoc: squareLenLocations,\r\n                    sphereCenLoc: sphereLocations,\r\n                    sphereColLoc: sphereColorLocations,\r\n                    sphereRadius2Loc: sphereRadius2Locations,\r\n                    sphereInvRadiusLoc: sphereInvRadiusLocations,\r\n                    cylinderCenLoc: cylinderLocations,\r\n                    cylinderAxisLoc: cylinderAxisLocations,\r\n                    cylinderColLoc: cylinderColorLocations,\r\n                    cylinderRadiusLoc: cylinderRadiusLocations,\r\n                    cylinderLengthLoc: cylinderLengthLocations,\r\n                    squareLoc: squareLocations,\r\n                    squareNormLoc: squareNormLocations,\r\n                    squareUDirLoc: squareUDirLocations,\r\n                    squareVDirLoc: squareVDirLocations,\r\n                    squareColLoc: squareColors,\r\n                }\r\n            }\r\n        \r\n            start() {\r\n                gl.useProgram(this.programID);\r\n            }\r\n        \r\n            stop() {\r\n                gl.useProgram(null);\r\n            }\r\n        \r\n            cleanUp() {\r\n                this.stop();\r\n                gl.detachShader(this.programID, this.vertexShaderID);\r\n                gl.detachShader(this.programID, this.fragmentShaderID);\r\n                gl.deleteShader(this.vertexShaderID);\r\n                gl.deleteShader(this.fragmentShaderID);\r\n                gl.deleteProgram(this.programID);\r\n            }\r\n        }\r\n        class Loader{\r\n            static loadToVAO(data){\r\n                const vaoID = gl.createVertexArray();\r\n                vaos.push(vaoID);\r\n                gl.bindVertexArray(vaoID);\r\n                \r\n                var vboID = gl.createBuffer();\r\n                vbos.push(vboID);\r\n                gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, vboID);\r\n                gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(data.indices), gl.STATIC_DRAW);\r\n                \r\n                vboID = gl.createBuffer();\r\n                vbos.push(vboID);\r\n                gl.bindBuffer(gl.ARRAY_BUFFER, vboID);\r\n                gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(data.positions), gl.STATIC_DRAW);\r\n                \r\n                gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\r\n                gl.bindVertexArray(null);\r\n                return new Model(vaoID, data.indices.length);\r\n            }\r\n        }\r\n        \r\n        function main() {\r\n            console.log(window.devicePixelRatio)\r\n            const shaders = {\r\n                vsSource: `#version 300 es\r\n                    in vec2 aVertexPosition;\r\n                    void main(void) {\r\n                        gl_Position = vec4(aVertexPosition, 0.0, 1.0);\r\n                    }`,\r\n                fsSource: `#version 300 es\r\n                    precision highp float;\r\n                    out vec4 fragmentColor;\r\n                    uniform vec3 camera_dir;\r\n                    uniform vec3 camera_up;\r\n                    uniform vec3 camera_right;\r\n                    uniform vec3 camera_pos;\r\n                    \r\n                    struct HitInfo{\r\n                        bool hit;\r\n                        float dist_from_cam;\r\n                    };\r\n        \r\n                    struct Square{\r\n                        vec3 pos, norm, uDir, vDir, color;\r\n                        float length;\r\n                    };\r\n        \r\n                    struct Sphere{\r\n                        vec3 center, color;\r\n                        float radius2, inv_radius;\r\n                    };\r\n        \r\n                    struct Ray{\r\n                        vec3 origin, direction;\r\n                    };\r\n                    struct Cylinder{\r\n                        vec3 pos, axis, color;\r\n                        float radius, length;\r\n                    };\r\n        \r\n                    uniform Square squares[3];\r\n                    uniform Sphere spheres[`+ renderer.MAX_SPHERES + `];\r\n                    uniform Cylinder cylinders[`+ renderer.MAX_CYLINDERS + `];\r\n                    uniform vec3 light;\r\n                    uniform float cosPhi[24];\r\n                    uniform float sinPhi[24];\r\n                    uniform float time;\r\n                    uniform int numCylinders, numSpheres;\r\n        \r\n                    #define MAX pow(10.0, 6.0)\r\n                    const float width = float(`+ Math.min(WIDTH, 800.0)+`);\r\n                    const float height = float(`+ Math.min(WIDTH, 800.0) * FACTOR +`);\r\n                    const float screen_dist = 1.0 * width;\r\n                    const float light_radius = 200.0;\r\n                    const float light_radius2 = 40000.0;\r\n                    \r\n                    HitInfo shoot_ray_at_cylinder(Ray ray, Cylinder cylinder, float closest_dist){\r\n                        bool hit = false;\r\n                        float min_dist = 0.0;\r\n                        vec3 Dir = cylinder.pos - ray.origin;\r\n                        float RayCyl = dot(ray.direction, cylinder.axis);\r\n                        float oneMinRayCyl2 = 1.0 - RayCyl * RayCyl;\r\n                        float DirRay = dot(Dir, ray.direction);\r\n                        float DirCyl = dot(Dir, cylinder.axis);\r\n                        float DirDir = dot(Dir, Dir);\r\n                        float dist2 = 2.0 * DirRay * DirCyl * RayCyl - DirCyl * DirCyl\r\n                                    - DirRay * DirRay + oneMinRayCyl2 * DirDir;\r\n                        dist2 = dist2 / oneMinRayCyl2;\r\n                        if( dist2 < cylinder.radius * cylinder.radius){\r\n                            float origin_to_closest = (DirRay - RayCyl * DirCyl)/oneMinRayCyl2;\r\n                            min_dist = origin_to_closest - sqrt((cylinder.radius * cylinder.radius - dist2)/oneMinRayCyl2);\r\n                            if( min_dist > 0.0 && min_dist < closest_dist){\r\n                                vec3 cylinder_to_intersect = min_dist * ray.direction - Dir;\r\n                                float dist_from_cylinder_pos2 = dot(cylinder.axis, cylinder_to_intersect);\r\n                                if(dist_from_cylinder_pos2 < cylinder.length && dist_from_cylinder_pos2 >= 0.0){\r\n                                    hit = true;\r\n                                }\r\n                            }\r\n                        }\r\n                        return HitInfo(hit, min_dist);\r\n                    }\r\n        \r\n                    HitInfo shoot_ray_at_sphere(Ray ray, Sphere sphere, float closest_dist){\r\n                        bool hit = false;\r\n                        float dist_from_cam = 0.0;\r\n                        float dist_origin_to_closest = dot(ray.direction, sphere.center - ray.origin);\r\n                        if(dist_origin_to_closest > 0.0 && dist_origin_to_closest < closest_dist){\r\n                            vec3 closest_to_center = ray.origin + dist_origin_to_closest * ray.direction - sphere.center;\r\n                            float dist_closest_to_center2 = dot(closest_to_center, closest_to_center);\r\n                            if(dist_closest_to_center2 <= sphere.radius2){\r\n                                dist_from_cam = dist_origin_to_closest - sqrt(sphere.radius2 - dist_closest_to_center2);\r\n                                if(dist_from_cam < closest_dist){\r\n                                    hit = true;\r\n                                }\r\n                            }\r\n                        }\r\n                        return HitInfo(hit, dist_from_cam);\r\n                    }\r\n        \r\n                    HitInfo shoot_ray_at_square(Ray ray, Square square, float closest_dist){\r\n                        float cos_ray_normal = dot(ray.direction, square.norm);\r\n                        vec3 orig_to_square = square.pos - ray.origin;\r\n                        float rho = dot(orig_to_square, square.norm) / cos_ray_normal;\r\n                        bool hit = false;\r\n                        if(rho >= 0.0 && rho < closest_dist){\r\n                            float sigma = -dot(cross(orig_to_square, square.vDir), ray.direction) / cos_ray_normal;\r\n                            float rest = mod(sigma, 600.0);\r\n                            if(sigma >= 0.0 && sigma <= square.length && rest >= 10.0){\r\n                                float theta = dot(cross(orig_to_square, square.uDir), ray.direction) / cos_ray_normal;\r\n                                rest = mod(theta, 600.0);\r\n                                if(theta >= 0.0 && theta <= square.length && rest >= 10.0){\r\n                                    hit = true;\r\n                                }\r\n                            }\r\n                        }    \r\n                        return HitInfo(hit, rho);\r\n                    }\r\n                    \r\n                    void main() {\r\n                        vec3 ray_dir = normalize(screen_dist * camera_dir \r\n                                                + (gl_FragCoord.x - (width / 2.0)) * camera_right \r\n                                                + (gl_FragCoord.y - (height / 2.0)) * camera_up);\r\n                        vec3 color = vec3(0.0, 0.0, 0.0);\r\n                        Ray ray = Ray(camera_pos, ray_dir);\r\n                        float weight = 1.0;\r\n        \r\n                        for(int bounces = 0; bounces < 3; bounces++){\r\n                            int hitObjectId = 0;\r\n                            HitInfo bestHit = HitInfo(false, MAX);\r\n                            for(int j = 0; j < 3; j++){\r\n                                HitInfo thisHit = shoot_ray_at_square(ray, squares[j], bestHit.dist_from_cam);\r\n                                if(thisHit.hit){    \r\n                                    bestHit = thisHit;\r\n                                    hitObjectId = j;\r\n                                }\r\n                            }\r\n        \r\n                            for(int j = 0; j < `+ renderer.MAX_SPHERES + `; j++){\r\n                                if( j >= numSpheres){\r\n                                    break;\r\n                                }\r\n                                else{\r\n                                    HitInfo thisHit = shoot_ray_at_sphere(ray, spheres[j], bestHit.dist_from_cam);\r\n                                    if(thisHit.hit){\r\n                                        bestHit = thisHit;\r\n                                        hitObjectId = 3 + j;\r\n                                    }\r\n                                }\r\n                            }\r\n        \r\n                            for(int j = 0; j < `+ renderer.MAX_CYLINDERS + `; j++){\r\n                                if( j >= numCylinders){\r\n                                    break;\r\n                                }\r\n                                else{\r\n                                    HitInfo thisHit = shoot_ray_at_cylinder(ray, cylinders[j], bestHit.dist_from_cam);\r\n                                    if(thisHit.hit){\r\n                                        bestHit = thisHit;\r\n                                        hitObjectId = 3 + numSpheres + j;\r\n                                    }\r\n                                }\r\n                            }\r\n        \r\n                            if(bestHit.hit){\r\n                                float diff_coeff = 0.0;\r\n                                vec3 normal_at_point, hit_color;\r\n                                vec3 intersect_point = ray.origin + 0.99999 * bestHit.dist_from_cam * ray.direction;\r\n                                if ( hitObjectId < 3){\r\n                                    normal_at_point = squares[hitObjectId].norm;\r\n                                    hit_color = squares[hitObjectId].color;\r\n                                }\r\n                                else if( hitObjectId < 3 + numSpheres){\r\n                                    normal_at_point = spheres[hitObjectId - 3].inv_radius * (ray.origin + bestHit.dist_from_cam * ray.direction - spheres[hitObjectId - 3].center);\r\n                                    hit_color = spheres[hitObjectId - 3].color;\r\n                                }\r\n                                else{\r\n                                    int hitCylinderId = hitObjectId - 3 - numSpheres;\r\n                                    vec3 cylinder_pos_to_intersect = ray.origin + bestHit.dist_from_cam * ray.direction - cylinders[hitCylinderId].pos;\r\n                                    normal_at_point = normalize(cylinder_pos_to_intersect - dot(cylinders[hitCylinderId].axis, cylinder_pos_to_intersect) * cylinders[hitCylinderId].axis);\r\n                                    hit_color = cylinders[hitCylinderId].color;\r\n                                }\r\n                                vec3 point_to_light = light - intersect_point;\r\n                                float dist_from_light2 = dot(point_to_light, point_to_light);\r\n                                vec3 shadow_ray = point_to_light / sqrt(dist_from_light2);\r\n        \r\n                                bool hit_light = true;\r\n                                float light_cos = dot(normal_at_point, shadow_ray);\r\n                                Ray shadowRay = Ray(intersect_point, shadow_ray);\r\n                                if(light_cos > 0.0){\r\n                                    for (int j = 0; j < 3; j++){\r\n                                        if(shoot_ray_at_square( shadowRay, squares[j], MAX ).hit){\r\n                                            hit_light = false;\r\n                                            break;\r\n                                        }\r\n                                    }\r\n        \r\n                                    if(hit_light){\r\n                                        for (int j = 0; j < `+ renderer.MAX_SPHERES + `; j++){\r\n                                            if( j >= numSpheres){\r\n                                                break;\r\n                                            }\r\n                                            else{\r\n                                                if(shoot_ray_at_sphere( shadowRay, spheres[j], MAX ).hit){\r\n                                                    hit_light = false;\r\n                                                    break;\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n        \r\n                                    if(hit_light){\r\n                                        for (int j = 0; j < `+ renderer.MAX_CYLINDERS + `; j++){\r\n                                            if( j >= numCylinders){\r\n                                                break;\r\n                                            }\r\n                                            else{\r\n                                                if(shoot_ray_at_cylinder( shadowRay, cylinders[j], MAX ).hit){\r\n                                                    hit_light = false;\r\n                                                    break;\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n        \r\n                                    if(hit_light){\r\n                                        diff_coeff = light_cos;\r\n                                    }\r\n                                }\r\n                                \r\n                                ray = Ray(intersect_point, reflect(ray.direction, normal_at_point));\r\n                                float spec_coeff = pow(max(0.0, dot(shadow_ray, ray.direction)), 40.0);\r\n                                diff_coeff = max(0.3, diff_coeff);\r\n                                vec3 light_color = vec3(1.0, 1.0, 1.0);\r\n                                hit_color = vec3(hit_color.x * light_color.x, hit_color.y * light_color.y, hit_color.z * light_color.z);\r\n                                color += weight * diff_coeff * (hit_color + spec_coeff * light_color);\r\n                                weight *= 0.5 * diff_coeff;\r\n                            }\r\n                            else{\r\n                                if(bounces == 0){ color = vec3(0.7,0.7,0.7); }\r\n                                break;\r\n                            }\r\n                                                \r\n                            if(weight < 0.001){\r\n                                break;\r\n                            }\r\n                        }\r\n                        fragmentColor = vec4(color, 1.0);\r\n                    }`,\r\n            };\r\n            \r\n            const shaderProgram = new ShaderProgram(shaders, renderer.squares.length);\r\n            const cubeData = {\r\n                positions: [\r\n                -1.0, 1.0,// 1.0,\r\n                -1.0, -1.0,// 1.0,\r\n                1.0, -1.0,// 1.0,\r\n                1.0, 1.0,// 1.0,\r\n                ],\r\n                indices: [\r\n                0,  1,  2, \r\n                0,  2,  3]\r\n            }\r\n            const cubeModel = Loader.loadToVAO(cubeData);\r\n            var then = 0;\r\n            //var delta_time_fps = 0.0;\r\n            //var num_frames = 0;\r\n        \r\n            function render(now) {\r\n                now *= 0.001;  // convert to seconds\r\n                const deltaTime = now - then;\r\n                //delta_time_fps += deltaTime;\r\n                //num_frames += 1;\r\n                then = now;\r\n                if(changePerspective === true){\r\n                    var deltaX = cameraAngleX - cameraOldAngleX;\r\n                    var deltaY = cameraAngleY - cameraOldAngleY;\r\n                                \r\n                    renderer.cameraDirection = quatRot(renderer.cameraDirection, [0.0, 1.0, 0.0], deltaX);\r\n                    renderer.cameraRight = quatRot(renderer.cameraRight, [0.0, 1.0, 0.0], deltaX);\r\n                    renderer.cameraDirection = quatRot(renderer.cameraDirection, renderer.cameraRight, deltaY);\r\n                    renderer.cameraUp = crossProduct(renderer.cameraRight, renderer.cameraDirection);\r\n                    cameraOldAngleX = cameraAngleX;\r\n                    cameraOldAngleY = cameraAngleY;\r\n                }   \r\n        \r\n                renderer.drawScene(shaderProgram, cubeModel, deltaTime);\r\n                // if(Math.floor(delta_time_fps) >= 1){\r\n                //     var fps = Math.ceil(num_frames / delta_time_fps);\r\n                //     delta_time_fps = 0.0;\r\n                //     num_frames = 0;\r\n                //     document.getElementById(\"angle\").innerHTML = \"fps: \" + fps;\r\n                // }\r\n                requestAnimationFrame(render);\r\n            }\r\n        \r\n            requestAnimationFrame(render);\r\n        }\r\n        main();\r\n    },[canvas, WIDTH, FACTOR])\r\n    \r\n    return <canvas \r\n        ref             = {canvas} \r\n        width           = {Math.min(WIDTH, 800)} \r\n        height          = {Math.min(WIDTH, 800) * FACTOR} \r\n        style           = {{marginTop: '20px'}}></canvas>\r\n}","import React from 'react'\r\nimport './LogIn.css'\r\n\r\nexport default function LogIn(props){\r\n    const [username, changeName]            = React.useState(\"\")\r\n    const [password, changePassword]        = React.useState(\"\")\r\n    const [repeat, changeRepeat]            = React.useState(\"\")\r\n    const [buttonDisable, changeDisable]    = React.useState(true)\r\n    const [message, changeMessage]          = React.useState('')\r\n\r\n    const url = \"http://localhost:4000/api\";\r\n    function handleSubmit(e){\r\n        const route = props.active === 'register' ? '/register' : '/login'\r\n        fetch('/api' + route, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ username: username, password: password }),\r\n            withCredentials: true, \r\n            credentials: 'include'\r\n        }).then( res => {\r\n            switch(res.status){\r\n                case 200:\r\n                    res.json().then(jsonRes => {\r\n                        props.setUser(jsonRes.username);\r\n                        props.setActive(1)\r\n                    })\r\n                    break;\r\n                case 303:\r\n                    changeMessage('username not available')\r\n                    break;\r\n                case 404:\r\n                    changeMessage('username not found')\r\n                    break;\r\n                case 401:\r\n                    changeMessage('password wrong')\r\n                    break;\r\n                default:\r\n                    changeMessage('');\r\n            }\r\n        }).catch(err => console.error(err))\r\n    }\r\n    React.useEffect(() => {\r\n        if(username.length < 3){\r\n            changeMessage('username too short')\r\n            changeDisable(true)\r\n        } else if(password.length < 8) {\r\n            changeMessage('password too short')\r\n            changeDisable(true)\r\n        } else if(props.active === 'register' && password !== repeat){\r\n            changeMessage('passwords must match')\r\n            changeDisable(true)\r\n        } else {\r\n            changeMessage('')\r\n            changeDisable(false)\r\n        }\r\n    }, [password, repeat, username])\r\n    \r\n    React.useEffect(() => {\r\n        changePassword('')\r\n        changeRepeat('')\r\n        changeMessage('')\r\n    }, [props.active])\r\n    function handleNameChange(e){\r\n        changeName(e.currentTarget.value)\r\n        changePassword('')\r\n        changeRepeat('')\r\n    }\r\n    return (<div className={'LogIn'}>\r\n        <div className='Userinfo'>username:</div><input \r\n            value={username} \r\n            onChange={e => handleNameChange(e)}/>\r\n        <div className='Userinfo'>password:</div><input\r\n            type=\"password\" \r\n            value={password} \r\n            onChange={e => changePassword(e.currentTarget.value)}/>\r\n        {props.active==='register' && <div className='Userinfo'>repeat password:</div>}\r\n        {props.active==='register' && <input \r\n            type=\"password\" \r\n            value={repeat} \r\n            onChange={e => changeRepeat(e.currentTarget.value)}/>}\r\n        <div className='Message'>{message}</div>\r\n        <button onClick={handleSubmit} disabled={buttonDisable} className=\"Rect Submit\">Ok</button>\r\n    </div>)\r\n}","import React from 'react'\r\n\r\nexport default function InfoBar(props){\r\n    const url = \"http://localhost:4000/api\";\r\n    return(\r\n    <div className='InfoBar'>\r\n        <button \r\n            onClick={() => {\r\n                if(!props.user){\r\n                    props.setActive('login');\r\n                } else {\r\n                    fetch('/api/logout', {\r\n                        withCredentials: true, \r\n                        credentials: 'include'}).then( res => {\r\n                            props.setUser(null)\r\n                            //props.setPlans([])\r\n                    })\r\n                    .catch(err => console.log(err))\r\n                }\r\n            }} \r\n        className=\"Rect\">\r\n        Log {props.user ? 'out' : 'in'}</button>\r\n        {!props.user && <button \r\n            className=\"Rect\"\r\n            onClick={() => props.setActive('register')}>\r\n        Register</button>}\r\n        <div className='Access'>{props.user || 'guest access'}</div>\r\n    </div>\r\n    )\r\n}","import React from 'react'\r\nexport default function useDraggable(divRef, id, dimension, setVisualData, numRows, setNumRows){\r\n    //after the component mounted, this effect sets the necessary event handlers\r\n    //for dragging, dropping and resizing the component's top div\r\n    React.useEffect( () => {\r\n        const setPos = (newTop, newLeft) => {\r\n            setVisualData(prevState => {\r\n                return prevState.map(view => {\r\n                    return view._id === id ? {...view, top: newTop, left: newLeft} : view\r\n                })\r\n            })\r\n        }\r\n        const setSize = (newWidth, newHeight) => {\r\n            setVisualData(prevState => {\r\n                return prevState.map(view => {\r\n                    return view._id === id ? {...view, width: newWidth, height: newHeight} : view\r\n                })\r\n            })\r\n        }\r\n        const tiles         = document.getElementsByClassName('Tile');\r\n        const dashboard     = document.getElementById('Tiles')\r\n        \r\n        const dragDropMenu  = Array.prototype.find.call(divRef.current.childNodes, \r\n            el => el.className === 'DragDropMenu')\r\n        const dragBar       = Array.prototype.find.call(dragDropMenu.childNodes, \r\n            el => el.className === 'DragBar')\r\n\r\n        const resizeCorner  = document.createElement('div')\r\n        resizeCorner.className = 'Resize'\r\n        divRef.current.appendChild(resizeCorner)\r\n\r\n        //the page coords in px of the top left corner of the tile grid. necessary\r\n        //to convert mouse event coords into relative coords wrt tile grid\r\n        let dashLeft    = dashboard.getBoundingClientRect().left + window.scrollX\r\n        let dashTop     = dashboard.getBoundingClientRect().top  + window.scrollY\r\n        console.log(dashTop)\r\n        //the initial size and pos in tiles of the view div\r\n        const {width, height, top, left} = dimension\r\n\r\n        //cols and rows contain the first and last column/row number that\r\n        //the draggable div currently occupies in the tile grid\r\n        let cols = [left, left + width - 1];\r\n        let rows = [top, top + height - 1];\r\n\r\n        //currentCol/Row gets set when the mouse is click-moved and contains\r\n        //the col/row number of the mouse pointer in the tile grid\r\n        let currentCol = 0;\r\n        let currentRow = 0;\r\n        \r\n        //clickFromTopLeft is the distance in px of the mouseclick from \r\n        //the top left corner of the view that is being dragged\r\n        let clickFromTopLeft = [0, 0];\r\n\r\n        let isDrag   = false;\r\n        let isResize = false;\r\n        //hasMoved makes sure that there was mouse movement between click and release.\r\n        //otherwise (eg double click) currentRow and Col would not be set\r\n        let hasMoved = false;\r\n\r\n        function onResize(){\r\n            dashLeft = dashboard.getBoundingClientRect().left + window.scrollX\r\n            dashTop  = dashboard.getBoundingClientRect().top + window.scrollY\r\n        }\r\n        window.addEventListener('resize', onResize)\r\n\r\n        function dragDown(e){\r\n            Array.prototype.forEach.call(tiles, tile => {\r\n                if(tile.getAttribute('row') >= rows[0]\r\n                && tile.getAttribute('row') <= rows[1]\r\n                && tile.getAttribute('col') >= cols[0]\r\n                && tile.getAttribute('col') <= cols[1])\r\n                    tile.style.opacity = 0.15;\r\n                else tile.style.opacity = 0.06;\r\n            })\r\n            divRef.current.style.transition = null\r\n            isDrag = true; \r\n            dashboard.style.opacity = 1;\r\n            clickFromTopLeft = [ \r\n                e.pageY - rows[0] * 100 - dashTop, \r\n                e.pageX - cols[0] * 100 - dashLeft]\r\n        }\r\n        dragBar.addEventListener('mousedown', dragDown)\r\n        \r\n        function resizeDown(){\r\n            divRef.current.style.transition = null\r\n            isResize = true;\r\n            dashboard.style.opacity = 1;\r\n        }\r\n        resizeCorner.addEventListener('mousedown', resizeDown)\r\n        \r\n        function move(e){\r\n        //when the mouse is clickmoved currentRow/Col gets set and the style of\r\n        //the view div gets changed. state will only be updated on mouse release\r\n            if(isDrag || isResize) {\r\n                hasMoved = true;\r\n                \r\n                //deltaY/X describes the pixel difference of the mouse pointer\r\n                //to the top/left of the tile grid\r\n                const deltaY = Math.max(e.pageY - dashTop - clickFromTopLeft[0], 0)\r\n                const deltaX = Math.max(e.pageX - dashLeft- clickFromTopLeft[1], 0)\r\n                currentRow = Math.floor(deltaY/100);\r\n                currentCol = Math.floor(deltaX/100);\r\n                \r\n                //using min/maxRow/Col, instead of rows/cols we can set the tile opacity\r\n                //for draging and resizing in one call\r\n                let minRow, maxRow, minCol, maxCol;\r\n                if(isDrag) {\r\n                    minRow = currentRow;\r\n                    maxRow = currentRow + (rows[1] - rows[0]);\r\n                    minCol = Math.min(12 - (cols[1] - cols[0] + 1), currentCol);\r\n                    maxCol = minCol + (cols[1] - cols[0]);\r\n\r\n                    divRef.current.style.top = deltaY + 'px';\r\n                    divRef.current.style.left = Math.min(1200 - (cols[1] - cols[0] + 1) * 100, deltaX) + 'px';\r\n                    if(numRows < maxRow + 3) setNumRows(maxRow + 3)\r\n                } else {//if resize\r\n                    divRef.current.style.width = Math.min(1200, Math.max((e.pageX - dashLeft) - cols[0] * 100, 100)) + 'px'\r\n                    divRef.current.style.height = Math.max((e.pageY - dashTop) - rows[0] * 100, 100) + 'px'\r\n\r\n                    minRow = rows[0];\r\n                    maxRow = Math.max(currentRow, minRow);\r\n                    minCol = cols[0]; \r\n                    maxCol = Math.max(currentCol, minCol);\r\n                }\r\n                //color the tiles of the dashboard according to the rows and cols\r\n                //of the current view\r\n                Array.prototype.forEach.call(tiles, tile => {\r\n                    if(tile.getAttribute('row') >= minRow\r\n                    && tile.getAttribute('row') <= maxRow\r\n                    && tile.getAttribute('col') >= minCol\r\n                    && tile.getAttribute('col') <= maxCol)\r\n                        tile.style.opacity = 0.15;\r\n                    else tile.style.opacity = 0.06;\r\n                })\r\n            }\r\n        }\r\n        document.addEventListener('mousemove', move)\r\n\r\n        function up(){\r\n            if(hasMoved){\r\n                if(isDrag) {\r\n                    const rowWidth = cols[1] - cols[0]\r\n                    cols[1] =  Math.min(currentCol + rowWidth, 11)\r\n                    cols[0] =  cols[1] - rowWidth\r\n                    rows[1] += currentRow - rows[0]\r\n                    rows[0] =  currentRow\r\n                    \r\n                    //setting the pos of the view when mouse is released. note that\r\n                    //setDragPoint won't fire if the view is released **on its current tile**\r\n                    //as the state doesn't change in that case. in order to make it snap \r\n                    //onto its tile we need to set style.top/left manually\r\n                    divRef.current.style.transition = 'top 200ms, left 200ms'\r\n                    divRef.current.style.top = currentRow * 100 + 'px';\r\n                    divRef.current.style.left = cols[0] * 100 + 'px';\r\n                    setPos(\r\n                        currentRow,\r\n                        cols[0] \r\n                    )\r\n                    \r\n                }\r\n                if(isResize){\r\n                    //setting the end col/row of the div in the grid\r\n                    cols[1] = Math.min(11, currentCol)\r\n                    rows[1] = currentRow\r\n                    divRef.current.style.transition = 'width 200ms, height 200ms'\r\n                    //as with the pos we need to manually update width/height to make sure\r\n                    //the div resizes properly **when the state of rows/cols doesn't change**\r\n                    divRef.current.style.width = Math.min(1200, Math.max((cols[1] - cols[0] + 1) * 100 - 1, 100)) + 'px'\r\n                    divRef.current.style.height = Math.max((rows[1] - rows[0] + 1) * 100 - 1, 100) + 'px'\r\n                    setSize(\r\n                        (cols[1] - cols[0] + 1),\r\n                        (rows[1] - rows[0] + 1)\r\n                    )\r\n                }\r\n            }\r\n            isDrag = false         \r\n            isResize = false;\r\n            hasMoved = false;\r\n            clickFromTopLeft = [0, 0]\r\n            dashboard.style.opacity = 0;\r\n        }\r\n        document.addEventListener('mouseup', up)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', onResize)\r\n            document.removeEventListener('mousemove', move)\r\n            document.removeEventListener('mouseup', up)\r\n            dragBar.removeEventListener('mousedown', dragDown)\r\n            resizeCorner.removeEventListener('mousedown', resizeDown)\r\n        }\r\n    }, [])\r\n}","import React from 'react'\r\nimport './DragDropMenu.css'\r\nimport { tree } from 'd3'\r\n\r\nexport default function DragDropMenu(props){\r\n    const menuRef       = React.useRef()\r\n    const dragBarRef       = React.useRef()\r\n    const menuIconRef   = React.useRef() \r\n    const [disableInput, setDisableInput] = React.useState(true)\r\n    const showMenu = React.useRef(false)\r\n    \r\n    React.useEffect(() => {\r\n        const dragBar = Array.prototype.find.call(menuRef.current.childNodes, \r\n            el => el.className === 'DragBar')\r\n        const dropDown = Array.prototype.find.call(menuRef.current.childNodes, \r\n            el => el.className === 'DropDown')\r\n        const menuIcon = menuIconRef.current\r\n        const topBar = Array.prototype.find.call(menuIcon.childNodes, \r\n            el => el.classList.contains('top'))\r\n        const midBar = Array.prototype.find.call(menuIcon.childNodes, \r\n            el => el.classList.contains('mid'))\r\n        const lowBar = Array.prototype.find.call(menuIcon.childNodes, \r\n            el => el.classList.contains('low'))\r\n        function menuDown(e){            \r\n            e.stopPropagation()\r\n            if(showMenu.current){\r\n                menuIcon.classList.remove('visibleGray')\r\n                dragBar.classList.remove('visibleGray')\r\n                dropDown.style.opacity = 0;\r\n                dropDown.style.visibility = 'hidden';\r\n                dropDown.style.width = '0px'\r\n                topBar.classList.remove('topBarCross')\r\n                midBar.style.opacity = 1;\r\n                lowBar.classList.remove('lowBarCross')\r\n            } else {\r\n                menuIcon.classList.add('visibleGray')\r\n                dragBar.classList.add('visibleGray')\r\n                dropDown.style.opacity = 1;\r\n                dropDown.style.visibility = 'visible';\r\n                dropDown.style.width = '100px'\r\n                topBar.classList.add('topBarCross')\r\n                midBar.style.opacity = 0;\r\n                lowBar.classList.add('lowBarCross')\r\n            }\r\n            //setShowMenu(prevShowMenu => !prevShowMenu)\r\n            showMenu.current = !showMenu.current\r\n        }\r\n        menuIcon.addEventListener('mousedown', menuDown)\r\n        return () => menuIcon.removeEventListener('mousedown', menuDown)\r\n    }, [])\r\n    function handleChange(e){\r\n        props.rename(e.currentTarget.value)\r\n    }\r\n    function handleRename(e){\r\n        setDisableInput(false)\r\n        //simualte a mouse down on the menu icon\r\n        var clickEvent = document.createEvent('MouseEvents');\r\n        clickEvent.initEvent('mousedown', true, true);\r\n        menuIconRef.current.dispatchEvent(clickEvent);\r\n\r\n        const dragBar = dragBarRef.current;\r\n        dragBar.classList.add('visibleGray')\r\n\r\n        const graphName = Array.prototype.find.call(dragBar.childNodes, el => {\r\n            return el.nodeName === 'INPUT'\r\n        })\r\n        graphName.disabled = false;\r\n        graphName.style.display = 'inline'\r\n        graphName.select()\r\n    }\r\n    function handleBlur(){\r\n        setDisableInput(true)\r\n        dragBarRef.current.classList.remove('visibleGray')\r\n    }\r\n    function handleMouseDown(e){\r\n        e.stopPropagation()\r\n        e.preventDefault()\r\n    }\r\n    return(<div ref={menuRef} className='DragDropMenu'>\r\n        <div className='DropDown'>\r\n            <div onClick={props.delete} className='menuOption delete'>Delete</div>\r\n            <div onClick={handleRename} className='menuOption rename'>Rename</div>\r\n        </div>\r\n        <div ref={dragBarRef} className='DragBar'>\r\n            <div ref={menuIconRef} className='menuIcon'>\r\n                <div style={{top: '3px'}} className='menuIconBar top'></div>\r\n                <div style={{top: '7px'}} className='menuIconBar mid'></div>\r\n                <div style={{top: '11px'}} className='menuIconBar low'></div>\r\n            </div>\r\n            <div \r\n                className='graphName'\r\n                style       = {{display: !disableInput ? 'none' : 'inline'}}>{props.name || 'chart'}\r\n            </div>\r\n            <input\r\n                style       = {{display: disableInput ? 'none' : 'inline'}}\r\n                className   = 'graphName'\r\n                value       = {props.name || 'chart'}\r\n                onChange    = {handleChange}\r\n                onBlur      = {handleBlur}\r\n                onMouseDown = {handleMouseDown}\r\n                disabled    = {disableInput}>\r\n            </input>\r\n            <div width='20px' height='20px'></div>\r\n        </div>\r\n    </div>)\r\n}","import React from 'react'\r\nimport * as d3 from 'd3'\r\nimport './DataViewer.css'\r\n\r\nimport useDraggable from '../hooks/useDraggable'\r\nimport DragDropMenu from './DragDropMenu'\r\n\r\nexport default function DataViewer({name, visualData, setVisualData, numRows, setNumRows}){\r\n    const divRef = React.useRef()\r\n    \r\n    const svg    = React.useRef()\r\n    const x      = React.useRef()\r\n    const y      = React.useRef()\r\n    const path   = React.useRef()\r\n    const text   = React.useRef()\r\n    const xTicks = React.useRef()\r\n    const xRange = React.useRef()\r\n    const yRange = React.useRef()\r\n    const xScale = React.useRef()\r\n    const yScale = React.useRef()\r\n    \r\n    useDraggable(divRef, visualData._id,{\r\n        top:   visualData.top, \r\n        left:   visualData.left, \r\n        width:  visualData.width,  \r\n        height: visualData.height\r\n    }, \r\n    setVisualData, numRows, setNumRows);\r\n    const deleteMe = React.useCallback(() => {\r\n        setVisualData(prevState => {\r\n            return prevState.filter(view => view._id !== visualData._id)\r\n        })\r\n    }, [])\r\n    const renameMe = React.useCallback(newName => {\r\n        setVisualData(prevState => {\r\n            return prevState.map(view => {\r\n                return view._id === visualData._id ? {...view, name: newName} : view\r\n            })       \r\n        })\r\n    }, [])\r\n    \r\n    React.useEffect(() => {\r\n        console.log('remake svg')\r\n        //d3.select(svg.current).selectAll('*').remove()\r\n        const width = visualData.width * 100\r\n        const height = visualData.height * 100\r\n        const xVals = visualData.type === 'graph' ? visualData.data.map(pair => pair[0])\r\n            : visualData.data.map(pair => pair[1])\r\n    \r\n        xRange.current = [\r\n            Math.min(...xVals , 0),\r\n            Math.max(...xVals)\r\n        ]\r\n        const yVals = visualData.type === 'graph' ? visualData.data.map(pair => pair[1])\r\n        : visualData.data.map((pair, i) => i + 1)\r\n        yRange.current = [\r\n            Math.round(Math.min(...yVals, 0)),\r\n            Math.round(Math.max(...yVals))\r\n        ]\r\n        xTicks.current = []\r\n        if(visualData.type === 'graph') xVals.forEach((val, index) => {\r\n            !Math.abs(val)<Math.pow(10, -5) && index % (Math.floor(xVals.length / 15)) == 0 && xTicks.current.push(val)\r\n        })\r\n                \r\n        xScale.current = d3.scaleLinear().domain(xRange.current)\r\n        xScale.current.range([0, width])\r\n        \r\n        yScale.current = d3.scaleLinear().domain(yRange.current)\r\n        yScale.current.range([height, 0])\r\n                \r\n        d3.select(svg.current)\r\n            //.attr(\"preserveAspectRatio\", \"xMinYMin meet\")\r\n            .attr(\"preserveAspectRatio\", \"none\")\r\n        \r\n        x.current = d3.select(svg.current).append('g')\r\n        y.current = d3.select(svg.current).append('g')\r\n            \r\n        if(visualData.type === 'bar') {\r\n            const data = xVals.map((xVal, i) => [xVal, yVals[i], visualData.data[i][0]])\r\n            path.current = d3.select(svg.current).append('g').selectAll('.bar')\r\n                .data(data)\r\n                .enter()\r\n                .append('rect')\r\n                .attr('x', 0)\r\n                .attr('width', dataPoint => dataPoint[0])\r\n                .attr('y', dataPoint => dataPoint[1] - 0.5 - 0.3)\r\n                .attr('height', 0.6)\r\n                .attr('fill', 'lightblue')\r\n                .attr('id', function(d, i) { return name + 'bar'+i})\r\n                .on('mouseover', function(){ d3.select(this).attr('fill','pink') })\r\n                .on('mouseout', function(){ d3.select(this).attr('fill','lightblue') })\r\n            text.current = d3.select(svg.current).append('g').selectAll('.bar')\r\n                .data(data)\r\n                .enter().append('text')\r\n                .text(dataPoint => dataPoint[2])\r\n                .attr('x', '10')\r\n                .style('font', '14px')\r\n                .on('mouseover', function(d, i){d3.select('#'+name+'bar'+i).attr('fill', 'pink');})\r\n                .on('mouseout', function(d, i){d3.select('#'+name+'bar'+i).attr('fill', 'lightblue');})\r\n         } else {//type = graph\r\n            const line = d3.line().curve(d3.curveStep)(visualData.data)\r\n            path.current = d3.select(svg.current).append('g').append('path')\r\n                .attr('d', line)\r\n                .style('stroke', 'darkgray').style('fill', 'none')\r\n                .style('stroke-width', '1px')\r\n                .style('vector-effect', 'non-scaling-stroke')\r\n                .on('mouseover', () => path.current.style('stroke','red').style('stroke-width', '3px'))\r\n                .on('mouseout', () => path.current.style('stroke','darkgray').style('stroke-width', '1px'))\r\n            }\r\n    }, [])\r\n    \r\n    //update the graphics when the size of the chart changes\r\n    React.useEffect(() => {\r\n        const width = visualData.width * 100\r\n        const height = visualData.height * 100\r\n        //let [width, height] = size\r\n        xScale.current.range([0, width])\r\n        yScale.current.range([height, 0])\r\n        \r\n        d3.select(svg.current).attr(\"viewBox\", `-25 -25 ${width+50} ${height+50}`)\r\n        const xAxis =  d3.axisBottom(xScale.current)\r\n        const yAxis =  d3.axisRight(yScale.current)\r\n        if(visualData.type === 'graph'){\r\n            xAxis.tickValues(xTicks.current).tickFormat(val => `${Math.round(val*10)/10}`)\r\n            yAxis.ticks(5)\r\n        } else {\r\n            xAxis.ticks(Math.round(width) / 40)\r\n            if(xRange.current[1] > 10000) xAxis.tickFormat(val => `${Math.floor(val / 1000)}k`)\r\n            yAxis.ticks(0);\r\n            const fontSize = Math.min(Math.max(0.26 / yRange.current[1] * yScale.current(0.6), 14), 32) + 'px arial'\r\n            text.current\r\n                .attr('y', dataPoint => yScale.current(dataPoint[1] - 0.6))\r\n                .style('font', fontSize)\r\n        }\r\n        x.current.attr('transform', 'translate(0,'+ yScale.current(0) +')')\r\n            .call(xAxis)\r\n        y.current.attr('transform', 'translate(' + xScale.current(0) + ', 0)')\r\n            .call(yAxis)\r\n        \r\n        path.current.attr('transform', `\r\n            translate(${xScale.current(0)} ${Math.round(yScale.current(0))}) \r\n            scale(${(width )/(xRange.current[1] - xRange.current[0])} \r\n                  ${(height)/(yRange.current[0] - yRange.current[1])})\r\n        `)\r\n    }, [visualData.width, visualData.height])//size\r\n    \r\n    return <div\r\n        className='DataViewer' \r\n        ref={divRef} \r\n        style ={{\r\n            top: visualData.top * 100 + 'px',\r\n            left: visualData.left * 100 + 'px',\r\n            width:  visualData.width * 100 - 1 + 'px',\r\n            height: visualData.height * 100 - 1 + 'px',\r\n            border: '1px darkgray solid'\r\n        }}>\r\n        <DragDropMenu \r\n            key     = {'menu'+visualData._id} \r\n            name    = {visualData.name} \r\n            delete  = {deleteMe} \r\n            rename  = {renameMe}/>\r\n        <svg \r\n            ref={svg} \r\n            style={{\r\n                position: 'absolute',\r\n                top: '20px',\r\n                left: '0',\r\n                width:  '100%',\r\n                height: 'calc(100% - 20px)'//visualData.height * 100 - 20 + 'px'\r\n        }}/>\r\n    </div>\r\n}","import React from 'react'\r\nexport default function useStateStorage(key, empty){  \r\n    const [value, setValue] = React.useState(JSON.parse(sessionStorage.getItem(key)) || JSON.parse(empty))\r\n    React.useEffect(() => {\r\n      sessionStorage.setItem(key, JSON.stringify(value))\r\n    }, [value])\r\n    return [value, setValue]\r\n}","import React from 'react'\r\nimport './Dashboard.css'\r\nimport DataViewer from './DataViewer'\r\nimport useStateStorage from '../hooks/useStateStorage'\r\nexport default function Dashboard(props){\r\n    //const TILE_SIZE = 100;\r\n    const [tiles, setTiles] = React.useState([])\r\n    const [numRows, setNumRows] = useStateStorage('numRows', 6)\r\n    const [visualData, setVisualData] = useStateStorage('visualData', '[]')\r\n    const [startDateOmni, setStartDateOmni] = React.useState('yyyy/mm/dd')\r\n    const [endDateOmni, setEndDateOmni] = React.useState('yyyy/mm/dd')\r\n    const numCols = 12;\r\n    {/* these are some examples of graphs and bar charts\r\n    React.useEffect(() => {\r\n        const tempData = []\r\n        tempData.push({color: 'red', type: 'graph', width: 6, height: 2, top: 0, left: 0, data: []})\r\n        for(let j = 0; j <= 16; j++) tempData[0].data.push([-2*Math.PI + Math.PI/4*j, Math.sin(-2*Math.PI + Math.PI/4*j)])\r\n        tempData.push({color: 'blue', type: 'graph', width: 6, height: 2, top: 0, left: 6, data: []})\r\n        for(let j = 0; j <= 16; j++) tempData[1].data.push([-2*Math.PI + Math.PI/4*j, Math.cos(-2*Math.PI + Math.PI/4*j)])\r\n        tempData.push({color: 'green', type: 'graph', width: 6, height: 2, top: 2, left: 0, data: []})\r\n        for(let j = 0; j <= 20; j++) tempData[2].data.push([-2 + j * 6/20, Math.exp(-2 + j * 6/20)])\r\n        tempData.push({color: 'orange', type: 'bar', width: 6, height: 2, top: 2, left: 6, \r\n        data: [['first', 12], ['second', 8], ['third', 15]]})\r\n        setVisualData(tempData)\r\n    }, [])*/}\r\n    \r\n    //when the number of rows in the grid needs to change this effect adds/subtracts\r\n    //from the tiles array\r\n    React.useEffect(() => {\r\n        const oldNumRows = tiles.length / numCols\r\n        if(oldNumRows > numRows){\r\n            setTiles(prevTiles => prevTiles.slice(0, numRows * numCols))\r\n        }\r\n        if(oldNumRows < numRows){\r\n            const temp = []\r\n            for(let j = oldNumRows; j < numRows; j++) {\r\n                for(let k = 0; k < numCols; k++){\r\n                    const num = numCols * j + k\r\n                    temp.push(<div \r\n                        className='Tile'\r\n                        row={j} \r\n                        col={k} \r\n                        key={'tile'+ num}>\r\n                    </div>)\r\n                }\r\n            }\r\n            setTiles(prevTiles => [...prevTiles, ...temp])\r\n        }\r\n        document.getElementById('Tiles').style.gridTemplateRows = `repeat(${numRows}, 100px)`\r\n    }, [numRows])\r\n\r\n    //everytime the visual data changes, change the number of rows to the new maximal row + 2\r\n    React.useEffect(() => {\r\n        const newRow = Math.max(...visualData.map(graph => graph.top + graph.height))\r\n        setNumRows(newRow  + 2)\r\n    }, [visualData])\r\n\r\n    const handleOmniwebClick = () => {\r\n        const startDate = document.getElementById('start').value.split('-').join('')\r\n        const endDate = document.getElementById('end').value.split('-').join('')\r\n        fetch('/api/omniweb', {\r\n            method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ startDate: startDate, endDate: endDate })\r\n            })\r\n            .then(response => response.json())\r\n            .then(jsonRes => {\r\n                setVisualData(prevState => [...prevState, jsonRes])\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    const handleTwitterClick = () => {\r\n        fetch('/api/twitter')\r\n            .then(response => response.json())\r\n            .then(jsonRes => {\r\n                setVisualData(prevState => [...prevState, jsonRes])\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    const handleSaveClick = () => {\r\n        fetch('/api/dash', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({graphs: visualData}),\r\n            withCredentials: true, \r\n            credentials: 'include'\r\n        }).then(() => {\r\n            handleLoadClick()\r\n        }).catch(err => console.log(err))\r\n    }\r\n    const handleLoadClick = () => {\r\n        fetch('/api/dash')\r\n            .then(response => response.json())\r\n            .then(jsonRes => setVisualData(jsonRes))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (<div style={{marginTop: '20px'}}>\r\n        <button onClick={handleTwitterClick} className='Rect'>Twitter</button>\r\n        <button onClick={handleOmniwebClick} className='Rect'>OmniWeb</button>\r\n        <button onClick={handleSaveClick} className='Rect'>save data</button>\r\n        <button onClick={handleLoadClick} className='Rect'>load data</button>\r\n        <form>\r\n            <label>Start Date: </label>\r\n            <input id='start' type='date'></input>\r\n            <label>End Date: </label>\r\n            <input id='end' type='date'></input>\r\n        </form>\r\n        <div id='Dashboard'>\r\n            <div id='Tiles'>{tiles}</div>\r\n            {visualData.map(dataSet => {\r\n                return <DataViewer\r\n                    key             = {dataSet._id}\r\n                    name            = {'chart'+dataSet._id}\r\n                    visualData      = {dataSet}\r\n                    setVisualData   = {setVisualData} \r\n                    numRows         = {numRows}\r\n                    setNumRows      = {setNumRows}\r\n                />\r\n            })}\r\n        </div>\r\n    </div>)\r\n}","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport Menu         from './components/Menu';\r\nimport JobList      from './components/JobList';\r\nimport ToDoList     from './components/ToDoList';\r\nimport SnakeTracer  from './components/SnakeTracer';\r\nimport LogIn        from './components/LogIn'\r\nimport InfoBar      from './components/InfoBar'\r\nimport Dashboard    from './components/Dashboard';\r\nimport useStateStorage from './hooks/useStateStorage'\r\nfunction App() {\r\n  \r\n  const [active, setActive]           = useStateStorage('active', 1);\r\n  const [jobs, setJobs]               = useStateStorage('jobs', '[]');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [user, setUser]               = useStateStorage('user', null)\r\n  const [plans, setPlans]             = useStateStorage('plans', '[]')\r\n  const [view, setView]               = useState()\r\n  \r\n    //const proxy = 'https://cors-anywhere.herokuapp.com/';\r\n    //const url = 'https://jobs.github.com/positions.json';\r\n  \r\n  React.useEffect(() => {\r\n    //setJobs([{id: 1, title: 'the title', company: 'the company the company the company the company', company_logo: 'https://avatars0.githubusercontent.com/u/1342004?s=400&v=4/1342004.png', created_at: 'Mon 01 Dec', location: 'the world'}])   \r\n    async function fetchData(){\r\n        try{\r\n            console.log(\"getting data from server\")\r\n            const response = await fetch('http://localhost:4000/api/jobs');\r\n            const data = await response.json();\r\n            setJobs(data)\r\n        } catch(err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    fetchData();\r\n\r\n  }, []);\r\n  \r\n  React.useEffect(() => {\r\n    switch(active){\r\n    case 1:\r\n      setView(<JobList \r\n        jobs            = {jobs} \r\n        currentPage     = {currentPage}\r\n        setCurrentPage  = {setCurrentPage}\r\n      />);\r\n      break;\r\n    case 2:\r\n      setView(<ToDoList \r\n        plans     = {plans} \r\n        setPlans  = {setPlans}/>);\r\n      break;\r\n    case 3:\r\n      setView(<SnakeTracer/>);\r\n      break;\r\n    case 4:\r\n      setView(<Dashboard/>)\r\n      break;\r\n    case 'login':\r\n    case 'register':\r\n      setView(<LogIn \r\n        setUser   = {setUser} \r\n        active    = {active} \r\n        setActive = {setActive}/>);\r\n      break;\r\n    default:\r\n      setView();\r\n    }\r\n  }, [active, currentPage, plans])\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <div className='TitleBar'>\r\n        <div className='LeftInfo'></div>\r\n        <h1 className='Title'>my_app {active}</h1>\r\n        <InfoBar setPlans={setPlans} setUser={setUser} user={user} setActive={setActive}/>\r\n      </div>\r\n      <Menu \r\n        clickHandler = {setActive} \r\n        activeMenu={active}/>\r\n      {view}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}